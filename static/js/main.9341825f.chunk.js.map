{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","currentTarget","value","console","warn","reset","preventDefault","type","onChange","pattern","title","required","placeholder","Filter","ContactList","contacts","ondeleteContact","className","style","listContact","map","id","contactItem","onClick","App","setContacts","filter","setFilter","useEffect","localStorage","setItem","JSON","stringify","data","log","newContact","uuidv4","find","o","toLowerCase","alert","normalizedFilter","contact","includes","visibleContacts","contactId","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9341825f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm ({onSubmit}) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    \n    const handleChange = (event) => {\n        switch (event.target.name) {\n          case 'name':\n            setName(event.currentTarget.value);\n            break;\n          case 'number':\n            setNumber( event.currentTarget.value);\n            break;\n\n          default: console.warn(`${event.target.value} not found`)\n        }\n      };\n\n    const handleAddContact = event => {\n        event.preventDefault();\n        onSubmit({name, number})\n        reset()\n    };\n    const reset = () => {\n        setName ('')\n        setNumber('')\n    };\n\n        return (\n            <form onSubmit={handleAddContact}>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={handleChange}\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        placeholder=\"Name Surname\"\n                    />\n                </label>\n                <label>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        onChange={handleChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        placeholder=\"111-11-11\"\n                    />\n                </label>\n                <button type=\"submit\">Add contact</button>\n            </form>\n        );\n}\n\n\nContactForm.propTypes = {\n    contacts: PropTypes.array,\n    name: PropTypes.string,\n    number: PropTypes.number,\n    handleAddContact: PropTypes.func,\n    handleChange: PropTypes.func,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n    <label>\n        <p>Find contacts by name</p>\n        <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport style from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, ondeleteContact }) => (\n    <ul className={style.listContact}>\n        {contacts.map(({ id, name, number }) => (\n            <li key={id} className={style.contactItem}>\n                <p>\n                    &#9742; {name}: {number}\n                </p>\n                <button type=\"button\" onClick={() => ondeleteContact(id)}>\n                    Delete\n                </button>\n            </li>\n        ))}\n    </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n    ondeleteContact: PropTypes.func,\n    contacts: PropTypes.array,\n};\n","import React, { useState, useEffect, memo } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const formSubmit = data => {\n    console.log(data)\n    const newContact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n    console.log(newContact);\n    let obj = contacts.find(\n      o => o.name.toLowerCase() === data.name.toLowerCase())\n    if (!obj) {\n      setContacts(contacts => [newContact, ...contacts])\n    }\n    else {\n      alert(`${data.name} is already in contact`);\n    }\n  };\n\n\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(\n      contact => contact.id !== contactId))\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmit={formSubmit}\n        />\n\n        <h2>Contacts</h2>\n\n        <Filter value={filter}\n          onChange={changeFilter}\n        />\n        <ContactList\n          contacts={visibleContacts()}\n          ondeleteContact={deleteContact}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__4X_mi\",\"listContact\":\"ContactList_listContact__2OesI\"};"],"sourceRoot":""}